DROP ALL OBJECTS;
--TODO Дописать Констрейны

CREATE TABLE user_state (
  id INTEGER PRIMARY KEY,
  state VARCHAR
);

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  state_id INTEGER
--  CONSTRAINT pk_user PRIMARY KEY (id),
--  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(1000),
  available BOOLEAN NOT NULL,
  owner_id BIGINT NOT NULL,
  request_id BIGINT NOT NULL
);

CREATE TABLE IF NOT EXISTS feedbacks (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  item_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  comment VARCHAR(1000),
  created TIMESTAMP
);

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  description VARCHAR(1000) NOT NULL,
  requester_id BIGINT NOT NULL,
  created TIMESTAMP
);

CREATE TABLE statuses (
  id INTEGER PRIMARY KEY,
  status VARCHAR
);

CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  start_date TIMESTAMP NOT NULL,
  end_date TIMESTAMP NOT NULL,
  item_id BIGINT NOT NULL,
  booker_id BIGINT NOT NULL,
  status_id INTEGER NOT NULL,
);

CREATE TABLE booking_status (
  booking_id  BIGINT  NOT NULL REFERENCES bookings (id),
  status_id INTEGER NOT NULL REFERENCES status (id),
  PRIMARY KEY (booking_id, status_id)
);



--CREATE TYPE USER AS (
--  id BIGINT,
--  name VARCHAR,
--  email VARCHAR
--);
--
--CREATE TYPE REQUEST AS (
--  id BIGINT,
--  description VARCHAR,
--  requester USER,
--  created TIMESTAMP
--);
--
--CREATE TYPE ITEM AS (
--  id BIGINT,
--  name VARCHAR,
--  description VARCHAR,
--  available BOOLEAN,
--  owner USER,
--  request REQUEST
--);